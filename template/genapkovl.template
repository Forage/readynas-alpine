#!/bin/sh -e
PWD=`pwd`
echo ${PWD}

HOSTNAME="$1"
if [ -z "$HOSTNAME" ]; then
	echo "usage: $0 hostname"
	exit 1
fi

cleanup() {
	rm -rf "$tmp"
}

makefile() {
	OWNER="$1"
	PERMS="$2"
	FILENAME="$3"
	cat > "$FILENAME"
	chown "$OWNER" "$FILENAME"
	chmod "$PERMS" "$FILENAME"
}

rc_add() {
	mkdir -p "$tmp"/etc/runlevels/"$2"
	ln -sf /etc/init.d/"$1" "$tmp"/etc/runlevels/"$2"/"$1"
}

tmp="$(mktemp -d)"
trap cleanup EXIT

mkdir -p "$tmp"/etc
makefile root:root 0644 "$tmp"/etc/hostname <<EOF
$HOSTNAME
EOF

makefile root:root 0644 "$tmp"/etc/modules <<EOF
btrfs
raid0
raid1
raid5
vfat
EOF

mkdir -p "$tmp"/etc/network
makefile root:root 0644 "$tmp"/etc/network/interfaces <<EOF
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp

auto eth1
iface eth1 inet dhcp
EOF

mkdir -p "$tmp"/etc/apk
makefile root:root 0644 "$tmp"/etc/apk/world <<EOF
alpine-base
EOF

mkdir -p "$tmp"/etc/local.d
# =------------------------------------------------------------=
# Hello preseed script, my new friend.
#
# Note the single quotes around the EOF, to avoid evaluation
# at the time genapkovl runs.
# =------------------------------------------------------------=

# makefile root:root 0755 "$tmp"/etc/local.d/preseed.start <<'EOF'
# #!/bin/sh
# # Fail fast, if we make it onto a live system.
# test "$(hostname)" = "rnxpine" || exit 111
# # Here would be the preseed script in earnest. One that sets
# # the hostname to something else than `preseed`, or at least
# # makes sure the /etc/local.d/preseed.start isn't carried over.
# # Lest you're a glutton for punishment.
# echo "preseeded at $(date)" >> /root/preseeded.txt
# EOF

sed -e "s/%KEYMAP%/${KEYMAP:-de}/g" ${MEBUILDROOT}/../template/preseed.template > $tmp/etc/local.d/preseed.start
chown root:root $tmp/etc/local.d/preseed.start
chmod 0755 $tmp/etc/local.d/preseed.start

# =------------------------------------------------------------=
# some readynas helpers
mkdir -p "$tmp"/etc/readynas/cups
cp ${MEBUILDROOT}/../template/cups.conf.template "$tmp"/etc/readynas/cups

rc_add devfs sysinit
rc_add dmesg sysinit
rc_add mdev sysinit
rc_add hwdrivers sysinit
rc_add modloop sysinit

rc_add hwclock boot
rc_add modules boot
rc_add sysctl boot
rc_add hostname boot
rc_add bootmisc boot
rc_add syslog boot
# rc_add seedrng boot
# rc_add swap boot

# we want our preseed to run & have network while at it
rc_add networking boot
# !!! HINT !!!
# comment to prevent automatic run of converter
rc_add local boot

# we still need to add acpid, sshd, and the like and add
# the modules we need
# rc_add acpid default
# rc_add chronyd default
# rc_add crond default
# rc_add sshd default
# rc_add samba default

rc_add mount-ro shutdown
rc_add killprocs shutdown
rc_add savecache shutdown

tar -c -C "$tmp" etc | gzip -9n > $HOSTNAME.apkovl.tar.gz